{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\react\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport classes from './Comments.module.css';\nimport { useEffect, useState } from 'react';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  4;\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const startAddComment = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddComment,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedQuote: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["classes","useEffect","useState","NewCommentForm","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","jsxDEV","_jsxDEV","Comments","_s","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","quoteId","startAddComment","addedCommentHandler","comments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","onAddedQuote","_c","$RefreshReg$"],"sources":["C:/Users/hp/react/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import classes from './Comments.module.css'\nimport { useEffect, useState } from 'react';\nimport NewCommentForm from './NewCommentForm'\nimport { useParams } from 'react-router-dom'\nimport useHttp from '../../hooks/hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments); 4\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  const startAddComment = () => {\n    setIsAddingComment(true);\n  }\n\n  const addedCommentHandler = () => {\n\n  }\n\n  let comments;\n\n\n  if (status === 'pending') {\n    comments = <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (<button className='btn' onClick={startAddComment}>Add a Comment</button>)}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedQuote={addedCommentHandler} />}\n      <p>{comments}</p>\n    </section>\n  )\n}\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module"}